z <- 4
x + g(x)
}
f(3)
z<-10
f(#)
f
sd
f(#)
fasedf
sf
21
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x
assignmentURL = paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
setwd("C:\Users\Kyle Shank\Desktop\SCHOOL\COURSERA\RProgramming\Coding Assignment 1")
setwd("C:\\Users\Kyle Shank\Desktop\SCHOOL\COURSERA\RProgramming\Coding Assignment 1")
??setwd()
setwd("~Desktop\SCHOOL\COURSERA\RProgramming\Coding Assignment 1")
setwd("C:/")
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/")
list.files(0)
list.files()
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming/")
list.files()
unzip(rprog_data_specdata.zip)
??grep()
## Set working directory
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming/")
## Grab assignment .zip file from website
assignmentURL <- paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
# create a temporary directory for assignment
specdata <- tempdir()
# create the placeholder file
tempFile = tempfile(tmpdir=specdata, fileext=".zip")
# download into the placeholder file
download.file(assignmentURL, tempFile)
specdata
tempfile
specdata <- tempdir()
specdata
??download.file
download.file(assignmentURL, tempFile)
# unzip the file to the temporary directory
unzip(tf, files=tf, exdir=specdata, overwrite=TRUE)
tf = tempfile(tmpdir=specdata, fileext=".zip")
# unzip the file to the temporary directory
unzip(tf, files=tf, exdir=specdata, overwrite=TRUE)
## Grab assignment .zip file from website
assignmentURL <- paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
# create a temporary directory for assignment
specdata <- tempdir()
# create the placeholder file
tf = tempfile(tmpdir=specdata, fileext=".zip")
# download into the placeholder file
download.file(assignmentURL, tf)
# unzip the file to the temporary directory
unzip(tf, files=tf, exdir=specdata, overwrite=TRUE)
??unzip()
tf
# unzip the file to the temporary directory
unzip(tf, exdir=specdata, overwrite=TRUE)
specdata
tf
fpath<-file.path(specdata,tf)
fpath
unzip(tf, exdir=specdata, overwrite=TRUE)
fpath<-file.path(specdata,tf)
fpath
specdata
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- (specdata)
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10) == 4.064
pollutantmean("specdata", "sulfate", 1:10)
# Grab assignment .zip file from website
assignmentURL <- paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
# create a temporary directory for assignment
specdata <- tempdir()
# create the placeholder file
tf = tempfile(tmpdir=specdata, fileext=".zip")
# download into the placeholder file
download.file(assignmentURL, tf)
# unzip the file to the temporary directory
fname <- unzip(tf, files=fname, exdir=specdata, overwrite=TRUE)
# fpath is the full path to the extracted file
fpath <- file.path(td, fname)
# unzip the file to the temporary directory
fname <- unzip(tf, files=fname, exdir=specdata, overwrite=TRUE)
# fpath is the full path to the extracted file
fpath <- file.path(specdata, fname)
fname <- unzip(tf, files=fname, exdir=specdata, overwrite=TRUE)
fname <- unzip(tf, exdir=specdata, overwrite=TRUE)
# fpath is the full path to the extracted file
fpath <- file.path(specdata, fname)
fname
specdata
fpath
fname
specdata
fname[220]
# unzip the file to the temporary directory
specdata <- unzip(tf, overwrite=TRUE)
specdata
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- (specdata)
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- (specdata)
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
specdata
specdata[315]
mean(specdata[315])
test<-read.csv(specdata[315])
test
names(test)
mean(test$sulfate,ra.nm=T)
mean(test$nitrate)
??mean
mean(test$sulfate,na.rm=T)
test
pollutantmean("specdata","nitrate",315)
mean(test$sulfate,na.rm=T)
pollutantmean("specdata","sulfate",315)
??download.file
??tempfile
tf <-  tempfile(fileext=".zip")
tf
specdata[unzip(tf)]
specdata
??unzip()
assignmentURL <- paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
specdata <- tempdir()
# Creates a temporary directory called "specdata"
tf <-  tempfile(fileext=".zip")
# Creates a placeholder file called "tf"
download.file(assignmentURL, tf)
# Downloads the file and places the zipped file into "tf"
unzip(tf, exdir=specdata, overwrite=TRUE)
# Creates a directory
specdata
tf
??create.dir
fpath
fname
specdata
??move
??mv
getwd()
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming")
list.files
list.files()
creat.dir
dir.create
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming")
create.dir("specdata")
dir.create("specdata")
tf
unzip(tf, exdir=specdata, overwrite=TRUE)
# Creates a directory
unzip(tf, exdir= "specdata", overwrite=TRUE)
currwd(0)
currwd()
curwd()
getwd()
unzip(tf, exdir= getwd(), overwrite=TRUE)
# Creates a directory
getwd()
??unzip()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- (specdata)
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata",nitrate,1:10)
pollutantmean("specdata","nitrate",1:10)
assignmentURL <- paste('https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip')
tf <-  tempfile(fileext=".zip")
# Creates a placeholder file called "tf"
download.file(assignmentURL, tf)
# Downloads the file and places the zipped file into "tf"
unzip(tf, exdir= getwd(), overwrite=TRUE)
# Unzips the .zip file and places "specdata" into your current working directory.
setwd("./specdata")
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- (specdata)
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
pollutantmean("specdata", "sulfate", 1:10)
)
pollutantmean("specdata","sulfate",1:10)
getwd()
list.files()
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/")
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23)
setwd("./specdata")
getwd()
list.files()
setwd("c:./coursera-r-programming/")
getwd()
list.files
list.files()
setwd("./specdata")
list.files()
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23)
current_file
getwd()
setwd(C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming/specdata")
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming/specdata")
list.files()
getwd()
setwd("C:/Users/Kyle Shank/Desktop/SCHOOL/COURSERA/RProgramming/Coding Assignment 1/coursera-r-programming")
list.files()
unzip(tf, exdir= getwd(), overwrite=TRUE)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == T) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
#   if(grep("specdata", directory) == T) {
#     directory <- ("./specdata/")
#   }
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata","nitrate",23)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
#    if(grep("specdata", directory) == T) {
#      directory <- ("./specdata/")
#    }
directory<-("./specdata/")
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23) == 1.281
pollutantmean("specdata", "nitrate", 23) == 1.281
all.files<-as.character(list.files(directory))
directory<-("./specdata/")
all.files<-as.character(list.files(directory))
all.files
